<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>browser profiler test</title>
    <style>
    #demo {
        height: 50px;
        width: 50px;
        border: 1px solid black;
        background-color: #ccc;
        cursor: move;
    }
    </style>
</head>
<body>
  <h2>browser profiler test</h2>
    
    <div id="demo">Drag Me</div>

    <div id="results"></div>

<script class="javascript" src="http://bp.yahooapis.com/2.1.11/browserplus.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.6.0/build/yahoo-dom-event/yahoo-dom-event.js"></script> 
<script type="text/javascript" src="http://yui.yahooapis.com/2.6.0/build/dragdrop/dragdrop-min.js"></script> 

<script type="text/javascript" src="js/profiler.js"></script> 

<script>

    var startTime = null;

    var stopProfile = function() {
        BrowserPlus.BrowserProfiler.stop({}, function(x) {});
    };
    var startProfile = function() {
        var beforeCall = (new Date()).getTime();
        BrowserPlus.BrowserProfiler.start({
            startedCallback: function(data) {
				var afterCall = (new Date()).getTime();
				startTime = (afterCall + beforeCall) / 2;
				console.log("startedCallback delay: " + 
							(afterCall - beforeCall) + "ms");
            }
        }, function(cpuData) {
			var report = YAHOO.tool.Profiler.getFullReport(function(data){
				return data.calls > 0;
			});
			buildReport(cpuData.value, report);
			console.log(cpuData.value);
			console.log(report);

            YAHOO.tool.Profiler.unregisterObject("YAHOO.util.DD");
            YAHOO.tool.Profiler.unregisterObject("YAHOO.util.Dom");
		});

        YAHOO.tool.Profiler.registerObject("YAHOO.util.DD");
        YAHOO.tool.Profiler.registerObject("YAHOO.util.Dom");
    };


    BrowserPlus.init({}, function(r) {
        if (r.success) {
            BrowserPlus.require({
                services: [
                {
                    service: "BrowserProfiler",
                    version: "0",
                    minversion: "0.1.1"
                }
            ]}, function(r) {
            if (!r.success) {
                alert("couldn't require BrowserProfiler, did you install it?");
            } else {
                var dd = new YAHOO.util.DD('demo');
                dd.startDrag = startProfile;
                dd.endDrag = stopProfile;
            } 
          });
        }
    });
    
    var buildReport = function(cpuData, report) {
        //console.log(arguments);
        //This is really hacky, but oh well it's a hack ;)
		// (lth) and I doubled the hackery
        for (var i in report) {
            //console.log(i);
            var stamps = report[i].stamps;
            for (var s = 0; s < stamps.length; s++) {
				
                var start = (stamps[s].start - startTime) / 1000.0;
				// find which bucket to drop this in, yeah, x^3
				for (var j in cpuData) {
					if ((cpuData[j].offset + .1) > start) {
						if (!cpuData[j].methods) cpuData[j].methods = [];
						cpuData[j].methods.push(i);
						break;
					}
				}
			}
        }
        //console.log(report);
        //console.log(data);
        var r = document.getElementById('results');
        r.innerHTML = '';
        var str = '<table border="1" width="50%" cellpadding="2" cellspacing="2">';
        str += '<tr><th>offset</th><th>cpu</th><th>memory</th><th># of calls</th></tr>';

        for (var i in cpuData) {
			console.log(i);
			console.log(cpuData[i]);
            str += '<tr><td>' + cpuData[i].offset +'</td><td>'
				+ cpuData[i].cpu + '</td><td>' + cpuData[i].mem + '</td><td>'
				+ (cpuData[i].methods ? cpuData[i].methods.length : 0) + '</td></tr>';
        }

        str += '</table>';

        r.innerHTML = str;

    };

</script>
</body>
</html>

